
[슬라이드 1: 프로젝트 개요]
안녕하세요. 저는 Java 웹 개발 기초 학습의 일환으로 JSP 게시판 프로젝트를 진행했습니다.
이 프로젝트는 JSP와 Servlet을 활용해 로그인 기능과 게시판 목록 출력 기능을 구현하는 것이 주요 목표입니다.
개발 환경은 IntelliJ, Tomcat, Java 11, Maven을 사용했고,
향후에는 Oracle DB를 연동해서 실제 데이터를 저장할 예정입니다.

[슬라이드 2: 사용 기술 스택]
사용된 주요 기술 스택은 다음과 같습니다.
JSP는 동적 HTML을 생성하는 View 역할을 하며,
Servlet은 브라우저의 요청을 처리하는 Controller 역할을 합니다.
Tomcat은 JSP/Servlet을 실행하는 웹 서버이며,
Maven은 프로젝트 의존성 관리를 도와줍니다.
데이터 저장은 추후 Oracle DB를 연동하여 처리할 계획입니다.

[슬라이드 3: 현재 구현된 기능]
현재까지 구현한 기능은 크게 네 가지입니다.
첫 번째는 로그인 페이지로, 사용자로부터 ID와 비밀번호를 입력받습니다.
두 번째는 LoginServlet을 통한 로그인 처리이며, 입력된 정보를 검증해 게시판 페이지로 이동합니다.
세 번째는 게시판 목록 화면으로, 샘플 게시글이 표 형식으로 출력됩니다.
마지막은 로그아웃 기능으로, 세션을 종료하고 다시 로그인 화면으로 이동합니다.

[슬라이드 4: 현재 흐름 구조 (MVC)]
전체 흐름은 MVC 패턴을 따릅니다.
사용자가 브라우저에서 login.jsp에 ID/PW를 입력하면,
LoginServlet에서 이를 처리하고 검증한 후,
boardList.jsp를 통해 게시글 목록을 출력합니다.
사용자가 로그아웃을 선택하면 LogoutServlet이 세션을 종료하고 다시 로그인 페이지로 이동하게 됩니다.

[슬라이드 5: 주요 파일 구조 및 역할]
각 JSP 및 서블릿 파일의 역할은 다음과 같습니다.
login.jsp는 로그인 화면을 구성하고,
LoginServlet.java는 인증을 처리하며,
boardList.jsp는 게시판 내용을 출력합니다.
LogoutServlet.java는 로그아웃 처리 및 세션 종료를 담당합니다.
마지막으로 web.xml은 웹앱의 시작 페이지와 환경 설정을 정의합니다.

[슬라이드 6: 향후 개발 계획]
앞으로는 Oracle DB와 연동하여 사용자 정보와 게시글을 실제로 저장하고,
게시글 작성, 수정, 삭제 기능도 구현할 예정입니다.
게시글 상세보기 페이지도 추가하고, 세션 검증, 유효성 검사 같은 보안 기능도 강화할 계획입니다.
UI 측면에서는 Bootstrap을 도입해 사용자 경험을 높일 예정입니다.

[슬라이드 7: 기대 효과]
이 프로젝트를 통해 Java 웹 기술의 기본 구조를 학습했고,
MVC 아키텍처를 기반으로 한 코드 분리와 흐름 제어도 경험할 수 있었습니다.
나아가 Spring Framework 등 더 확장된 기술로 연결할 수 있는 기반을 마련했다고 생각합니다.

“JSP는 화면(View), Servlet은 로직 처리(Controller), Tomcat은 이를 실행하는 엔진 역할을 합니다.
현재는 Tomcat 하나로 Web Server와 WAS 역할을 동시에 수행하고 있으며,
향후 Oracle DB를 연동해 실제 데이터를 처리할 예정입니다.
